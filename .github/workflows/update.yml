name: Update flake.lock
on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *' # Hourly. We want it to run frequently.

jobs:
  lockfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9
      - name: Update flake.lock
        id: update
        uses: DeterminateSystems/update-flake-lock@v20
        with:
          pr-title: "Update flake.lock"
          pr-body: |
            Automated changes by the [update-flake-lock](https://github.com/DeterminateSystems/update-flake-lock) GitHub Action.
            
            ```
            {{ env.GIT_COMMIT_MESSAGE }}
            ```
          pr-labels: |
            dependencies
            automated


        # This is workaround to force the cachix action to run after the update-flake-lock action.
        # Normally, it does not occur because the PR is created by github-actions[bot]
        # But here, we force push it with my own token, so the action runs after a push "by me".
      - name: Checkout repository
        if: ${{ steps.update.outputs.pull-request-number }}
        uses: actions/checkout@v4
        with:
            token: '${{ secrets.UPDATE_TOKEN }}'
      - name: Amend and push; forcibly run builds
        if: ${{ steps.update.outputs.pull-request-number }}
        uses: actions/github-script@v7
        with:
          script: |
            await exec.exec('git checkout update_flake_lock_action');
            await exec.exec('git commit --amend --no-edit');
            await exec.exec('git push origin update_flake_lock_action --force');